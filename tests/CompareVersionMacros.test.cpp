// Copyright 2022 flagarde

#include "khaos/CompareVersionMacros.h"

#include <doctest/doctest.h>

TEST_CASE("Test KHAOS_VERSION_GREATER()")
{
  CHECK_EQ(0, KHAOS_VERSION_GREATER(KHAOS_VERSION, MAJOR, MINOR, PATCH));
  CHECK_EQ(0, KHAOS_VERSION_GREATER(KHAOS_VERSION, MAJOR, MINOR, PATCH + 1));
  CHECK_EQ(0, KHAOS_VERSION_GREATER(KHAOS_VERSION, MAJOR, MINOR + 1, PATCH));
  CHECK_EQ(0, KHAOS_VERSION_GREATER(KHAOS_VERSION, MAJOR + 1, MINOR, PATCH));
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH)
  CHECK_EQ(0, KHAOS_VERSION_GREATER(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH + 1)
  CHECK_EQ(1, KHAOS_VERSION_GREATER(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR + 1, PATCH)
  CHECK_EQ(1, KHAOS_VERSION_GREATER(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR + 1, MINOR, PATCH)
  CHECK_EQ(1, KHAOS_VERSION_GREATER(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
}

TEST_CASE("Test KHAOS_VERSION_GREATER_EQUAL()")
{
  CHECK_EQ(1, KHAOS_VERSION_GREATER_EQUAL(KHAOS_VERSION, MAJOR, MINOR, PATCH));
  CHECK_EQ(0, KHAOS_VERSION_GREATER_EQUAL(KHAOS_VERSION, MAJOR, MINOR, PATCH + 1));
  CHECK_EQ(0, KHAOS_VERSION_GREATER_EQUAL(KHAOS_VERSION, MAJOR, MINOR + 1, PATCH));
  CHECK_EQ(0, KHAOS_VERSION_GREATER_EQUAL(KHAOS_VERSION, MAJOR + 1, MINOR, PATCH));
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH)
  CHECK_EQ(1, KHAOS_VERSION_GREATER_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH + 1)
  CHECK_EQ(1, KHAOS_VERSION_GREATER_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR + 1, PATCH)
  CHECK_EQ(1, KHAOS_VERSION_GREATER_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR + 1, MINOR, PATCH)
  CHECK_EQ(1, KHAOS_VERSION_GREATER_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
}

TEST_CASE("Test KHAOS_VERSION_EQUAL()")
{
  CHECK_EQ(1, KHAOS_VERSION_EQUAL(KHAOS_VERSION, MAJOR, MINOR, PATCH));
  CHECK_EQ(0, KHAOS_VERSION_EQUAL(KHAOS_VERSION, MAJOR, MINOR, PATCH + 1));
  CHECK_EQ(0, KHAOS_VERSION_EQUAL(KHAOS_VERSION, MAJOR, MINOR + 1, PATCH));
  CHECK_EQ(0, KHAOS_VERSION_EQUAL(KHAOS_VERSION, MAJOR + 1, MINOR, PATCH));
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH)
  CHECK_EQ(1, KHAOS_VERSION_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH + 1)
  CHECK_EQ(0, KHAOS_VERSION_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR + 1, PATCH)
  CHECK_EQ(0, KHAOS_VERSION_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR + 1, MINOR, PATCH)
  CHECK_EQ(0, KHAOS_VERSION_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
}

TEST_CASE("Test KHAOS_VERSION_LOWER_EQUAL()")
{
  CHECK_EQ(1, KHAOS_VERSION_LOWER_EQUAL(KHAOS_VERSION, MAJOR, MINOR, PATCH));
  CHECK_EQ(1, KHAOS_VERSION_LOWER_EQUAL(KHAOS_VERSION, MAJOR, MINOR, PATCH + 1));
  CHECK_EQ(1, KHAOS_VERSION_LOWER_EQUAL(KHAOS_VERSION, MAJOR, MINOR + 1, PATCH));
  CHECK_EQ(1, KHAOS_VERSION_LOWER_EQUAL(KHAOS_VERSION, MAJOR + 1, MINOR, PATCH));
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH)
  CHECK_EQ(1, KHAOS_VERSION_LOWER_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH + 1)
  CHECK_EQ(0, KHAOS_VERSION_LOWER_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR + 1, PATCH)
  CHECK_EQ(0, KHAOS_VERSION_LOWER_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR + 1, MINOR, PATCH)
  CHECK_EQ(0, KHAOS_VERSION_LOWER_EQUAL(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
}

TEST_CASE("Test KHAOS_VERSION_LOWER()")
{
  CHECK_EQ(0, KHAOS_VERSION_LOWER(KHAOS_VERSION, MAJOR, MINOR, PATCH));
  CHECK_EQ(1, KHAOS_VERSION_LOWER(KHAOS_VERSION, MAJOR, MINOR, PATCH + 1));
  CHECK_EQ(1, KHAOS_VERSION_LOWER(KHAOS_VERSION, MAJOR, MINOR + 1, PATCH));
  CHECK_EQ(1, KHAOS_VERSION_LOWER(KHAOS_VERSION, MAJOR + 1, MINOR, PATCH));
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH)
  CHECK_EQ(0, KHAOS_VERSION_LOWER(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR, PATCH + 1)
  CHECK_EQ(0, KHAOS_VERSION_LOWER(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR, MINOR + 1, PATCH)
  CHECK_EQ(0, KHAOS_VERSION_LOWER(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
#define TEST_VERSION_PRIVATE() KHAOS_SET_VERSION(MAJOR + 1, MINOR, PATCH)
  CHECK_EQ(0, KHAOS_VERSION_LOWER(TEST_VERSION, KHAOS_GET_VERSION_MAJOR(KHAOS_VERSION), KHAOS_GET_VERSION_MINOR(KHAOS_VERSION), KHAOS_GET_VERSION_PATCH(KHAOS_VERSION)));
#undef TEST_VERSION_PRIVATE
}
