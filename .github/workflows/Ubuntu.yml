---
name: Ubuntu

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  gcc:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: [4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]

    container: flagarde/ci-ubuntu-gcc-${{ matrix.image }}-x86_64:latest

    steps:
    - name: Install git
      run: apt-get update; apt-get install --no-install-recommends -y git

    - name: Checkout
      uses: actions/checkout@v4

    - name: üìÇ Load .env file
      if: hashFiles('.github/workflows/.env') != ''
      uses: xom9ikk/dotenv@v2
      with:
        path: .github/workflows

    - name: ‚¨áÔ∏è Setup CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: ^3
        ninjaVersion: ^1

    - name: ‚öôÔ∏è run-cmake (configure)
      uses: cmake-tools/run-cmake@v0-alpha
      id: 'configure'
      with:
        mode: configure
        generator: 'Ninja'
        install_prefix: '../install'
        binary_dir: '../build'
        variables: |
          CMAKE_BUILD_TYPE=Debug
    - name: Build
      run: cmake --build build --parallel 2
    - name: Test
      run: cd build ; ctest -C Debug --output-on-failure

  clang:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: [3.5, 3.6, 3.7, 3.8, 3.9, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

    container: flagarde/ci-ubuntu-clang-${{ matrix.image }}-x86_64:latest

    steps:
    - name: Install git
      run: apt-get update; apt-get install --no-install-recommends -y git

    - name: Checkout
      uses: actions/checkout@v4

    - name: üìÇ Load .env file
      if: hashFiles('.github/workflows/.env') != ''
      uses: xom9ikk/dotenv@v2
      with:
        path: .github/workflows

    - name: ‚¨áÔ∏è Setup CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: ^3
        ninjaVersion: ^1

    - name: ‚öôÔ∏è run-cmake (configure)
      uses: cmake-tools/run-cmake@v0-alpha
      id: 'configure'
      with:
        mode: configure
        generator: 'Ninja'
        install_prefix: '../install'
        binary_dir: '../build'
        variables: |
          CMAKE_BUILD_TYPE=Debug
    - name: Build
      run: cmake --build build --parallel 2
    - name: Test
      run: cd build ; ctest -C Debug --output-on-failure ${{ env.CTEST_VERBOSITY }}

  intel:
    runs-on: ubuntu-latest
    container: flagarde/ci-ubuntu-gcc-11-x86_64:latest

    steps:
    - name: Install git
      run: apt-get update; apt-get install --no-install-recommends -y git

    - name: Checkout
      uses: actions/checkout@v4

    - name: üìÇ Load .env file
      if: hashFiles('.github/workflows/.env') != ''
      uses: xom9ikk/dotenv@v2
      with:
        path: .github/workflows

    - name: ‚¨áÔ∏è Setup CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: ^3
        ninjaVersion: ^1

    - name: Install intel-onepai
      run: apt install --no-install-recommends -y intel-oneapi-compiler-dpcpp-cpp; . /opt/intel/oneapi/setvars.sh

    - name: ‚öôÔ∏è run-cmake (configure)
      env:
        CC: icx
        CXX: icpx
      uses: cmake-tools/run-cmake@v0-alpha
      id: 'configure'
      with:
        mode: configure
        generator: 'Ninja'
        install_prefix: '../install'
        binary_dir: '../build'
        variables: |
          CMAKE_BUILD_TYPE=Debug

    - name: Build
      run: cmake --build build --parallel 2
    - name: Test
      run: cd build ; ctest -C Debug --output-on-failure ${{ env.CTEST_VERBOSITY }}
